{"ast":null,"code":"import _objectSpread from\"/Users/sarangkapadia/Documents/HelloWeb/snake/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/sarangkapadia/Documents/HelloWeb/snake/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useState}from'react';import{Box}from'./box';import{Score}from'./score';import{Button}from'./button';import{useInterval}from'./useInterval';import'./style/grid.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var root=document.querySelector(':root');var rootStyle=getComputedStyle(root);var gridSize=parseInt(rootStyle.getPropertyValue('--gridSize'));var snakeEndsInit={tail:{row:5,col:5},head:{row:8,col:5}};var grid=Array.from(Array(gridSize),function(){return new Array(gridSize).fill('b');});grid[5][5]=grid[6][5]=grid[7][5]=grid[8][5]='s';var Direction;(function(Direction){Direction[Direction[\"Up\"]=1]=\"Up\";Direction[Direction[\"Down\"]=2]=\"Down\";Direction[Direction[\"Right\"]=3]=\"Right\";Direction[Direction[\"Left\"]=4]=\"Left\";})(Direction||(Direction={}));var currentHeadDir=Direction.Down;var currentTailDir=Direction.Down;export var Grid=function Grid(){var _useState=useState(snakeEndsInit),_useState2=_slicedToArray(_useState,2),snakeEnds=_useState2[0],setSnakeEnds=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),playing=_useState4[0],setPlaying=_useState4[1];var getNewEnds=function getNewEnds(ends){var newCol=snakeEnds.head.col;var newRow=snakeEnds.head.row;switch(currentHeadDir){case Direction.Up:{newRow=snakeEnds.head.row-1<0?gridSize-1:snakeEnds.head.row-1;break;}case Direction.Down:{newRow=snakeEnds.head.row+1>=gridSize?0:snakeEnds.head.row+1;break;}case Direction.Right:{newCol=snakeEnds.head.col+1>=gridSize?0:snakeEnds.head.col+1;break;}case Direction.Left:{newCol=snakeEnds.head.col-1<0?gridSize-1:snakeEnds.head.col-1;break;}default:throw new Error('Invalid head direction!');}ends.head.row=newRow;ends.head.col=newCol;grid[newRow][newCol]='s';// assign new head\ngrid[snakeEnds.tail.row][snakeEnds.tail.col]='b';//clear current tail\nnewCol=snakeEnds.tail.col;newRow=snakeEnds.tail.row;switch(currentTailDir){case Direction.Up:{newRow=snakeEnds.tail.row-1<0?gridSize-1:snakeEnds.tail.row-1;break;}case Direction.Down:{newRow=snakeEnds.tail.row+1>=gridSize?0:snakeEnds.tail.row+1;break;}case Direction.Right:{newCol=snakeEnds.tail.col+1>=gridSize?0:snakeEnds.tail.col+1;break;}case Direction.Left:{newCol=snakeEnds.tail.col-1<0?gridSize-1:snakeEnds.tail.col-1;break;}default:throw new Error('Invalid tail direction!');}ends.tail.row=newRow;ends.tail.col=newCol;return ends;};var onTick=function onTick(){var ends=_objectSpread({},snakeEnds);console.log('head = ',ends.head,'tail = ',ends.tail);setSnakeEnds(getNewEnds(ends));};useInterval(onTick,// Delay in milliseconds or null to stop it\nplaying?100:null);var handleOnNewGame=useCallback(function(){setPlaying(function(playing){return!playing;});},[]);console.log(\"grid rendering\");return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:'gridContainer',children:grid.flat().map(function(box,index){return/*#__PURE__*/_jsx(Box,{className:box==='b'?'box':'snake',id:index},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:'appUtils',children:[/*#__PURE__*/_jsx(Score,{currentScore:0}),/*#__PURE__*/_jsx(Button,{onClick:handleOnNewGame,label:playing?'Stop Game':'New Game'})]})]});};","map":{"version":3,"sources":["/Users/sarangkapadia/Documents/HelloWeb/snake/src/grid.tsx"],"names":["React","useCallback","useState","Box","Score","Button","useInterval","root","document","querySelector","rootStyle","getComputedStyle","gridSize","parseInt","getPropertyValue","snakeEndsInit","tail","row","col","head","grid","Array","from","fill","Direction","currentHeadDir","Down","currentTailDir","Grid","snakeEnds","setSnakeEnds","playing","setPlaying","getNewEnds","ends","newCol","newRow","Up","Right","Left","Error","onTick","console","log","handleOnNewGame","flat","map","box","index"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport  { Box } from './box';\nimport { Score } from './score';\nimport { Button } from './button';\nimport { useInterval } from './useInterval';\nimport './style/grid.css'\n\nconst root = document.querySelector(':root')!;\nconst rootStyle = getComputedStyle(root);\nlet gridSize = parseInt(rootStyle.getPropertyValue('--gridSize'));\nconst snakeEndsInit = {tail:{row:5, col:5}, head:{row:8, col:5}};\n\nlet grid:string[][] = Array.from(Array(gridSize), () => new Array(gridSize).fill('b'));\ngrid[5][5] = grid[6][5] = grid[7][5] = grid[8][5] = 's';\nenum Direction{\n    Up = 1,\n    Down,\n    Right,\n    Left,\n}\n\nlet currentHeadDir = Direction.Down; \nlet currentTailDir = Direction.Down; \n\nexport const Grid: React.FunctionComponent = () => {\n    const [snakeEnds, setSnakeEnds] = useState(snakeEndsInit);\n    const [playing, setPlaying] = useState(false);\n\n    const getNewEnds = (ends: typeof snakeEnds) => {\n        let newCol = snakeEnds.head.col;\n        let newRow = snakeEnds.head.row;\n\n        switch(currentHeadDir){\n            case Direction.Up: {\n                newRow = (snakeEnds.head.row - 1) < 0 ? gridSize - 1 : snakeEnds.head.row - 1;\n                break;\n            }\n            case Direction.Down:{\n                newRow = (snakeEnds.head.row + 1) >= gridSize ? 0 : snakeEnds.head.row + 1;\n                break;\n            }\n            case Direction.Right:{\n                newCol = (snakeEnds.head.col + 1) >= gridSize ? 0 : snakeEnds.head.col + 1;\n                break;\n            }\n            case Direction.Left:{\n                newCol = (snakeEnds.head.col - 1) < 0 ? gridSize - 1 : snakeEnds.head.col - 1;\n                break;\n            }\n            default: throw(new Error('Invalid head direction!'));\n        }\n        ends.head.row = newRow;\n        ends.head.col = newCol;\n\n        grid[newRow][newCol] = 's'; // assign new head\n        grid[snakeEnds.tail.row][snakeEnds.tail.col] = 'b'; //clear current tail\n\n        newCol = snakeEnds.tail.col;\n        newRow = snakeEnds.tail.row;\n\n        switch(currentTailDir){\n            case Direction.Up: {\n                newRow = (snakeEnds.tail.row - 1) < 0 ? gridSize - 1 : snakeEnds.tail.row - 1;\n                break;\n            }\n            case Direction.Down:{\n                newRow = (snakeEnds.tail.row + 1) >= gridSize ? 0 : snakeEnds.tail.row + 1;\n                break;\n            }\n            case Direction.Right:{\n                newCol = (snakeEnds.tail.col + 1) >= gridSize ? 0 : snakeEnds.tail.col + 1;\n                break;\n            }\n            case Direction.Left:{\n                newCol = (snakeEnds.tail.col - 1) < 0 ? gridSize - 1 : snakeEnds.tail.col - 1;\n                break;\n            }\n            default: throw(new Error('Invalid tail direction!'));\n        }\n\n        ends.tail.row = newRow;\n        ends.tail.col = newCol;\n\n        return ends;\n    }\n\n    const onTick = () => {\n        let ends = {...snakeEnds};\n        console.log('head = ', ends.head, 'tail = ', ends.tail);\n        setSnakeEnds(getNewEnds(ends));\n    }\n\n    useInterval(\n        onTick,\n        // Delay in milliseconds or null to stop it\n        playing ? 100 : null\n      );\n\n    const handleOnNewGame = useCallback(() => {\n        setPlaying(playing => !playing);\n    },[]);\n\n    console.log(\"grid rendering\");\n\n    return (\n        <div >\n            <div className={'gridContainer'}>\n                {grid.flat().map((box, index) => <Box className={box==='b'?'box':'snake'} id={index} key={index} />)}\n            </div>\n            <div className={'appUtils'}>\n                <Score currentScore={0}></Score>\n                <Button onClick={handleOnNewGame} label={playing?'Stop Game':'New Game'}/>\n            </div>  \n    </div>);\n}"]},"metadata":{},"sourceType":"module"}